{"version":3,"sources":["microphone.tsx","audiostreamer.ts","audiobucket.ts","model-loader.tsx","ui/DisplayFrame.js","ui/ManualInput.js","ui/AudioPlayer.js","App.js","recognizer.tsx","ui/LayoutFrame.js","index.tsx"],"names":["micStream","audioStreamer","AudioStreamer","recognizer","options","chunk","encoding","callback","buffer","getChannelData","this","byteLength","acceptWaveform","Duplex","audioBucket","Writable","write","objectMode","decodeStrings","Microphone","loading","ready","useState","muted","setMuted","startRecognitionStream","useCallback","a","mediaStream","navigator","mediaDevices","getUserMedia","video","audio","echoCancellation","noiseSuppression","MicrophoneStream","bufferSize","setStream","console","error","unpipe","pipe","useEffect","icon","AudioMutedOutlined","AudioOutlined","disabled","onMouseUp","Wrapper","styled","div","models","Button","name","path","ModelLoader","onModelSelect","model","DisplayFrame","props","Graphs","month","type","setType","onselect","ele","target","value","onSet","elestring","log","slice","parseInt","manualInp","Group","defaultValue","onChange","format","min","max","AudioPlayer","url","Audio","playing","setPlaying","play","pause","currentTime","addEventListener","removeEventListener","useAudio","toggle","shape","SoundFilled","SoundOutlined","onClick","size","date","split","join","vel","Panel","Collapse","App","graphs","setGraphs","quer","setQuer","show","setShow","final","utterances","forEach","wordsToNumbers","text","impliedHundreds","toString","fetchVelData","fetch","res","json","data","direction","style","display","textAlign","className","defaultActiveKey","header","ManualInput","query","DeleteOutlined","danger","clearVoice","color","val","Header","ResultContainer","Word","span","confidence","Math","Recognizer","setUtterances","partial","setPartial","loadedModel","setLoadedModel","setRecognizer","setLoading","setReady","loadModel","terminate","createModel","KaldiRecognizer","setWords","on","message","result","utt","onModelChange","map","uindex","word","windex","conf","title","toFixed","Layout","Content","Footer","LayoutFrame","mode","defaultSelectedKeys","items","Array","fill","_","index","key","label","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ed7e616.chunk.js","sourcesContent":["import { Button } from \"antd\";\nimport { AudioMutedOutlined, AudioOutlined } from \"@ant-design/icons\";\nimport MicrophoneStream from \"microphone-stream\";\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport { AudioStreamer } from \"./audiostreamer\";\nimport { audioBucket } from \"./audiobucket\";\nimport { KaldiRecognizer } from \"vosk-browser\";\n\ninterface Props {\n  recognizer: KaldiRecognizer | undefined;\n  ready: boolean;\n  loading: boolean;\n}\n\nlet micStream: any;\nlet audioStreamer: AudioStreamer;\n\nconst Microphone: React.FunctionComponent<Props> = ({\n  recognizer,\n  loading,\n  ready,\n}) => {\n  const [muted, setMuted] = useState(true);\n\n  const startRecognitionStream = useCallback(async () => {\n    if (recognizer) {\n      setMuted(true);\n\n      if (!micStream) {\n        let mediaStream = null;\n        try {\n          mediaStream = await navigator.mediaDevices.getUserMedia({\n            video: false,\n            audio: {\n              echoCancellation: true,\n              noiseSuppression: true,\n            },\n          });\n\n          micStream = new MicrophoneStream({\n            objectMode: true,\n            bufferSize: 1024,\n          });\n\n          micStream.setStream(mediaStream);\n        } catch (err) {\n          console.error(err);\n        }\n      } else {\n        micStream.unpipe(audioStreamer);\n        micStream.pipe(audioBucket);\n      }\n\n      audioStreamer = new AudioStreamer(recognizer, {\n        objectMode: true,\n      });\n    }\n  }, [recognizer]);\n\n  useEffect(() => {\n    startRecognitionStream();\n  }, [recognizer]);\n\n  useEffect(() => {\n    setMuted(true);\n  }, [loading]);\n\n  useEffect(() => {\n    if (!muted) {\n      micStream?.unpipe(audioBucket);\n      micStream?.pipe(audioStreamer);\n    } else {\n      micStream?.unpipe(audioStreamer);\n      micStream?.pipe(audioBucket);\n    }\n  }, [muted]);\n\n  const toggleMic = () => {\n    setMuted((muted) => !muted);\n  };\n\n  return (\n    <Button\n      icon={muted ? <AudioMutedOutlined /> : <AudioOutlined />}\n      disabled={!ready || loading}\n      onMouseUp={toggleMic}\n    >\n      Speak\n    </Button>\n  );\n};\n\nexport default Microphone;\n","import { Duplex, DuplexOptions } from \"readable-stream\";\nimport { KaldiRecognizer } from \"vosk-browser\";\n\nexport class AudioStreamer extends Duplex {\n  constructor(public recognizer: KaldiRecognizer, options?: DuplexOptions) {\n    super(options);\n  }\n\n  public _write(chunk: AudioBuffer, encoding: any, callback: any) {\n    const buffer = chunk.getChannelData(0);\n    if (this.recognizer && buffer.byteLength > 0) {\n      this.recognizer.acceptWaveform(chunk);\n    }\n    callback();\n  }\n}\n","import { Writable } from \"readable-stream\";\n\nexport const audioBucket = new Writable({\n  write: function (chunk, encoding, callback) {\n    callback();\n  },\n  objectMode: true,\n  decodeStrings: false,\n});\n","import { Button} from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n  box-sizing: border-box;\n  margin-left: 0.5rem;\n`;\ninterface Props {\n  onModelChange: (value: string) => void;\n  onModelSelect: (value: string) => void;\n  loading: boolean;\n}\n\nexport const models: Array<{ name: string; path: string }> = [\n  \n  {\n    name: \"Indian English\",\n    path: \"vosk-model-small-en-in-0.4.tar.gz\",\n  },\n  {\n    name: \"English\",\n    path: \"vosk-model-small-en-us-0.15.tar.gz\",\n  },\n];\n\nconst ModelLoader: React.FunctionComponent<Props> = ({\n  onModelSelect,\n  loading,\n}) => {\n  const [model, setModel] = useState(models[0].path);\n  useEffect(() => {\n    onModelSelect(model)\n  }, [])\n  \n  return (\n    <Wrapper>\n      <span>\n        {loading ? \"Please wait while Loading\" : \"Click on Speak to Start Speaking\"}\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default ModelLoader;\n","import Graphs from \"./Graphs\";\r\nimport { Space, Card } from \"antd\";\r\nconst DisplayFrame = (props) => {\r\n  return (\r\n    <>\r\n      {/**{props.graphs && (\r\n        <Space\r\n          direction='vertical'\r\n          size='middle'\r\n          style={{\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <Card title='Input Map' size='small'>\r\n            <Graphs src={props.graphs.input_map} />\r\n          </Card>\r\n          <Card title='Solar Surface Map' size='small'>\r\n            <Graphs src={props.graphs.solar_surface_map} />\r\n          </Card>\r\n          <Card title='Fieldlines' size='small'>\r\n            <Graphs src={props.graphs.fieldlines} />\r\n          </Card>\r\n          <Card title='Solar Surface Map (Br vs Longitude)' size='small'>\r\n            <Graphs src={props.graphs.solar_surface_magnetic_field} />\r\n          </Card> \r\n          <Card title='Velocituy at 1AU' size='small'>\r\n            <Graphs src={props.graphs.velocity_at_1AU} />\r\n          </Card>\r\n\r\n          <Card title='Comparison (Correlating)' size='small'>\r\n            <Graphs src={props.graphs.comparison} />\r\n          </Card>\r\n          <Card title='Velocity with increasing R' size='small'>\r\n            <Graphs src={props.graphs.vel_with_r} />\r\n          </Card>\r\n        </Space>\r\n      )}*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayFrame;\r\n","import { InputNumber, DatePicker, Radio } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nconst Graphs = (props) => {\r\n  let month = [\r\n    \"january\",\r\n    \"february\",\r\n    \"march\",\r\n    \"april\",\r\n    \"may\",\r\n    \"june\",\r\n    \"july\",\r\n    \"august\",\r\n    \"september\",\r\n    \"october\",\r\n    \"november\",\r\n    \"december\",\r\n  ];\r\n  const [type, setType] = useState(1);\r\n  const onselect = (ele) => {\r\n    setType(ele.target.value);\r\n  };\r\n  const onSet = (ele, elestring) => {\r\n    console.log(elestring || ele);\r\n    if (elestring) {\r\n      elestring =\r\n        elestring.slice(0, 3) +\r\n        month[parseInt(elestring.slice(3, 5)) - 1] +\r\n        elestring.slice(5);\r\n    }\r\n    props.manualInp(elestring || ele);\r\n  };\r\n  return (\r\n    <>\r\n      <Radio.Group name='radiogroup' defaultValue={type}>\r\n        <Radio value={1} onChange={onselect}>\r\n          Date\r\n        </Radio>\r\n        <Radio value={2} onChange={onselect}>\r\n          CR Number\r\n        </Radio>\r\n      </Radio.Group>\r\n\r\n      {type === 1 ? (\r\n        <DatePicker onChange={onSet} format={\"DD/MM/YYYY\"} />\r\n      ) : (\r\n        <InputNumber min={1905} max={2255} onChange={onSet} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","import { Button } from \"antd\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { SoundOutlined, SoundFilled } from \"@ant-design/icons\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useAudio = (url) => {\r\n  const [audio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(true);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  useEffect(() => {\r\n    playing ? audio.play() : audio.pause();\r\n    audio.currentTime = 0;\r\n  }, [playing]);\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener(\"ended\", () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\r\n    };\r\n  }, []);\r\n\r\n  return [playing, toggle];\r\n};\r\n\r\nconst AudioPlayer = (props) => {\r\n  console.log(props.url);\r\n  const [playing, toggle] = useAudio(props.url);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type={playing ? \"text\" : \"default\"}\r\n        shape='circle'\r\n        icon={playing ? <SoundFilled /> : <SoundOutlined />}\r\n        onClick={toggle}\r\n        size='large'\r\n      />\r\n      <br></br>\r\n      <h2>\r\n        Average velocity on {props.date && props.date.split(\"+\").join(\" \")} is{\" \"}\r\n        {props.vel ? props.vel : \"test\"}\r\n      </h2>\r\n    </div>\r\n  ); /*\r\n  return (\r\n    <>\r\n      <Button type='primary' icon={<SoundOutlined />} />\r\n      <ReactAudioPlayer\r\n        src='https://spacewapi.herokuapp.com/avgvelocity/?text=11+january+twentytwenty'\r\n        autoPlay={true}\r\n      />\r\n    </>\r\n  );*/\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import wordsToNumbers from \"words-to-numbers\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Space, Collapse } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport DisplayFrame from \"./ui/DisplayFrame\";\r\nimport ManualInput from \"./ui/ManualInput\";\r\nimport AudioPlayer from \"./ui/AudioPlayer\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction App(props) {\r\n  const [graphs, setGraphs] = useState({});\r\n  const [quer, setQuer] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    let final = \"\";\r\n    props.utterances.forEach((ele) => {\r\n      final =\r\n        final +\r\n        \"+\" +\r\n        wordsToNumbers(ele.text, { impliedHundreds: true })\r\n          .toString()\r\n          .split(\" \")\r\n          .join(\"\");\r\n    });\r\n    console.log(final);\r\n    setQuer(final);\r\n  }, [props, props.utterances]);\r\n\r\n  const fetchData = async () => {\r\n    console.log(`https://spacewapi.herokuapp.com/?text=${quer}`);\r\n    const res = await fetch(`https://spacewapi.herokuapp.com/?text=${quer}`);\r\n    const data = await res.json();\r\n    console.log(data);\r\n    setGraphs(data);\r\n  };\r\n\r\n  const fetchVelData = async () => {\r\n    console.log(`https://spacewapi.herokuapp.com/avgvelocity/?text=${quer}`);\r\n    const res = await fetch(\r\n      `https://spacewapi.herokuapp.com/avgvelocity/?text=${quer}`\r\n    );\r\n    const data = await res.json();\r\n    console.log(data);\r\n    setGraphs(data);\r\n    setShow(true);\r\n  };\r\n\r\n  const manualInp = (query) => {\r\n    console.log(query);\r\n    query && setQuer(query.split(\"/\").join(\"+\"));\r\n  };\r\n\r\n  return (\r\n    <Space\r\n      direction='vertical'\r\n      size='middle'\r\n      style={{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n      }}\r\n      className='panel'\r\n    >\r\n      <h4>OR</h4>\r\n      <Collapse defaultActiveKey={[\"0\"]}>\r\n        <Panel header='Manual Input' key='1'>\r\n          <ManualInput manualInp={manualInp} />\r\n        </Panel>\r\n      </Collapse>\r\n\r\n      <Space size='small'>\r\n        <Button type='primary' onClick={() => fetchVelData()}>\r\n          Get Graphs\r\n        </Button>\r\n        <Button\r\n          icon={<DeleteOutlined />}\r\n          type='primary'\r\n          danger\r\n          onClick={props.clearVoice}\r\n          color='#1E3388'\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Space>\r\n      {show && (\r\n        <AudioPlayer date={graphs.date} vel={graphs.val} url={graphs.url} />\r\n      )}\r\n      <DisplayFrame graphs={graphs} />\r\n    </Space>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { createModel, KaldiRecognizer, Model } from \"vosk-browser\";\nimport Microphone from \"./microphone\";\nimport ModelLoader from \"./model-loader\";\nimport App from './App'\n\nconst Wrapper = styled.div`\n  max-width: 900px;\n  text-align: left;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  justify-content: center;\n  background-color: rgb(255, 255, 255);\n  padding: 5%;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1rem auto;\n`;\n\nconst ResultContainer = styled.div`\n  width: 100%;\n  margin: 1rem auto;\n  border: 1px solid #aaaaaa;\n  padding: 1rem;\n  resize: vertical;\n  overflow: auto;\n  \n`;\n\nconst Word = styled.span<{ confidence: number }>`\n  color: ${({ confidence }) => {\n    const color = Math.max(255 * (1 - confidence) - 20, 0);\n    return `rgb(${color},${color},${color})`;\n  }};\n  white-space: normal;\n`;\n\ninterface VoskResult {\n  result: Array<{\n    conf: number;\n    start: number;\n    end: number;\n    word: string;\n  }>;\n  text: string;\n}\n\nexport const Recognizer: React.FunctionComponent = () => {\n  const [utterances, setUtterances] = useState<VoskResult[]>([]);\n  const [partial, setPartial] = useState(\"\");\n\n  const [loadedModel, setLoadedModel] = useState<{\n    model: Model;\n    path: string;\n  }>();\n  const [recognizer, setRecognizer] = useState<KaldiRecognizer>();\n  const [loading, setLoading] = useState(false);\n  const [ready, setReady] = useState(false);\n\n  const loadModel = async (path: string) => {\n    setLoading(true);\n    loadedModel?.model.terminate();\n\n    const model = await createModel(process.env.PUBLIC_URL + \"/models/\" + path);\n\n    setLoadedModel({ model, path });\n    const recognizer = new model.KaldiRecognizer(48000);\n    recognizer.setWords(true);\n    recognizer.on(\"result\", (message: any) => {\n      const result: VoskResult = message.result;\n      setUtterances((utt: VoskResult[]) => [...utt, result]);\n    });\n\n    recognizer.on(\"partialresult\", (message: any) => {\n      setPartial(message.result.partial);\n    });\n\n    setRecognizer(() => {\n      setLoading(false);\n      setReady(true);\n      return recognizer;\n    });\n  };\n\n  const clearVoice= () =>{\n    setUtterances((utt: VoskResult[]) => []);\n  }\n\n  return (\n    <Wrapper>\n      <ModelLoader\n        onModelChange={(path) => setReady(loadedModel?.path === path)}\n        onModelSelect={(path) => {\n          if (loadedModel?.path !== path) {\n            loadModel(path);\n          }\n        }}\n        loading={loading}\n      />\n      <Header>\n        <Microphone recognizer={recognizer} loading={loading} ready={ready} />\n      </Header>\n      <ResultContainer>\n        {utterances.map((utt, uindex) =>\n          utt?.result?.map((word, windex) => (\n            <Word\n              key={`${uindex}-${windex}`}\n              confidence={word.conf}\n              title={`Confidence: ${(word.conf * 100).toFixed(2)}%`}\n            >\n              {word.word}{\" \"}\n            </Word>\n          ))\n        )}\n        <span key=\"partial\">{partial}</span>\n      </ResultContainer>\n      \n      <App utterances={utterances} clearVoice={clearVoice}/>\n    </Wrapper>\n  );\n};\n","import { Breadcrumb, Layout, Menu } from \"antd\";\r\nimport { Recognizer } from \"../recognizer\";\r\nconst { Header, Content, Footer } = Layout;\r\nconst LayoutFrame = (props) => (\r\n  <Layout className='layout'>\r\n    <Header>\r\n      <div className='logo'>\r\n        {\" \"}\r\n        <h1 style={{ color: \"white\" }}>SWASTi Framework</h1>\r\n      </div>\r\n      <Menu\r\n        mode='horizontal'\r\n        defaultSelectedKeys={[\"2\"]}\r\n        items={new Array(15).fill(null).map((_, index) => {\r\n          const key = index + 1;\r\n          return {\r\n            key,\r\n            label: `nav ${key}`,\r\n          };\r\n        })}\r\n      />\r\n    </Header>\r\n    <Content\r\n      style={{\r\n        padding: \"0 50px\",\r\n      }}\r\n    >\r\n      <p></p>\r\n      <br />\r\n      <div className='site-layout-content'>\r\n        <Recognizer />\r\n      </div>\r\n    </Content>\r\n    <Footer\r\n      style={{\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      Footnote ©2022 Footnote\r\n    </Footer>\r\n  </Layout>\r\n);\r\n\r\nexport default LayoutFrame;\r\n","import \"antd/dist/antd.min.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nimport \"./index.css\";\n\nimport { Recognizer } from \"./recognizer\";\nimport LayoutFrame from \"./ui/LayoutFrame\";\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \n      <LayoutFrame />\n      \n    \n      \n      \n\n    \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}