{"version":3,"sources":["microphone.tsx","audiostreamer.ts","audiobucket.ts","model-loader.tsx","ui/Graph.js","ui/AudioPlayer.js","ui/DisplayFrame.js","ui/ManualInput.js","App.js","recognizer.tsx","ui/LayoutFrame.js","index.tsx"],"names":["micStream","audioStreamer","AudioStreamer","recognizer","options","chunk","encoding","callback","buffer","getChannelData","this","byteLength","acceptWaveform","Duplex","audioBucket","Writable","write","objectMode","decodeStrings","Microphone","loading","ready","useState","muted","setMuted","startRecognitionStream","useCallback","a","mediaStream","navigator","mediaDevices","getUserMedia","video","audio","echoCancellation","noiseSuppression","MicrophoneStream","bufferSize","setStream","console","error","unpipe","pipe","useEffect","icon","AudioMutedOutlined","AudioOutlined","disabled","onMouseUp","Wrapper","styled","div","models","Button","name","path","ModelLoader","onModelSelect","model","ChartJS","register","registerables","Graph","props","useRef","state","setState","calc","setCalc","data","data2","labels","datasets","type","fill","backgroundColor","context","gradient","chart","ctx","createLinearGradient","addColorStop","borderRadius","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","label","borderColor","responsive","plugins","legend","display","scales","y","min","temp","vel","dens","max","title","text","ticks","val","index","x","datasetStrokeWidth","pointDotStrokeWidth","tooltipFillColor","tooltipFontStyle","tooltipTemplate","scaleLabel","datasetIdKey","AudioPlayer","url","Audio","setAudio","playing","setPlaying","play","pause","currentTime","addEventListener","removeEventListener","useAudio","toggle","shape","SoundFilled","SoundOutlined","onClick","size","date","split","join","operations","SettingOutlined","DisplayFrame","log","Object","keys","graphdata","length","orientation","span","color","style","padding","paddingTop","paddingRight","margin","graphs","parseFloat","count","CloseCircleFilled","fontSize","ExclamationCircleFilled","CheckCircleFilled","textAlign","Math","round","avg_temp","avg_den","show","tabBarExtraContent","defaultActiveKey","TabPane","tab","velocity","calcvel","density","defaultProps","value","ManualInput","month","onChange","setShowGraphs","showGraphs","setType","onSet","ele","elestring","slice","parseInt","manualInp","Group","defaultValue","target","format","defaultChecked","Panel","Collapse","App","setGraphs","setGraphdata","quer","setQuer","setShow","final","utterances","forEach","wordsToNumbers","impliedHundreds","toString","myurl","fetchVelData","tempurl","fetch","res","json","res2","direction","className","header","query","DeleteOutlined","danger","clearVoice","Header","ResultContainer","Word","confidence","Recognizer","setUtterances","partial","setPartial","loadedModel","setLoadedModel","setRecognizer","setLoading","setReady","loadModel","terminate","createModel","KaldiRecognizer","setWords","on","message","result","utt","onModelChange","map","uindex","word","windex","conf","toFixed","Content","Layout","Footer","LayoutFrame","today","Date","getMonth","getDay","getFullYear","ghost","paddingBottom","marginBottom","extra","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.185cef27.chunk.js","sourcesContent":["import { Button } from \"antd\";\r\nimport { AudioMutedOutlined, AudioOutlined } from \"@ant-design/icons\";\r\nimport MicrophoneStream from \"microphone-stream\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { AudioStreamer } from \"./audiostreamer\";\r\nimport { audioBucket } from \"./audiobucket\";\r\nimport { KaldiRecognizer } from \"vosk-browser\";\r\n\r\ninterface Props {\r\n  recognizer: KaldiRecognizer | undefined;\r\n  ready: boolean;\r\n  loading: boolean;\r\n}\r\n\r\nlet micStream: any;\r\nlet audioStreamer: AudioStreamer;\r\n\r\nconst Microphone: React.FunctionComponent<Props> = ({\r\n  recognizer,\r\n  loading,\r\n  ready,\r\n}) => {\r\n  const [muted, setMuted] = useState(true);\r\n\r\n  const startRecognitionStream = useCallback(async () => {\r\n    if (recognizer) {\r\n      setMuted(true);\r\n\r\n      if (!micStream) {\r\n        let mediaStream = null;\r\n        try {\r\n          mediaStream = await navigator.mediaDevices.getUserMedia({\r\n            video: false,\r\n            audio: {\r\n              echoCancellation: true,\r\n              noiseSuppression: true,\r\n            },\r\n          });\r\n\r\n          micStream = new MicrophoneStream({\r\n            objectMode: true,\r\n            bufferSize: 1024,\r\n          });\r\n\r\n          micStream.setStream(mediaStream);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      } else {\r\n        micStream.unpipe(audioStreamer);\r\n        micStream.pipe(audioBucket);\r\n      }\r\n\r\n      audioStreamer = new AudioStreamer(recognizer, {\r\n        objectMode: true,\r\n      });\r\n    }\r\n  }, [recognizer]);\r\n\r\n  useEffect(() => {\r\n    startRecognitionStream();\r\n  }, [recognizer]);\r\n\r\n  useEffect(() => {\r\n    setMuted(true);\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!muted) {\r\n      micStream?.unpipe(audioBucket);\r\n      micStream?.pipe(audioStreamer);\r\n    } else {\r\n      micStream?.unpipe(audioStreamer);\r\n      micStream?.pipe(audioBucket);\r\n    }\r\n  }, [muted]);\r\n\r\n  const toggleMic = () => {\r\n    setMuted((muted) => !muted);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      icon={muted ? <AudioMutedOutlined /> : <AudioOutlined />}\r\n      disabled={!ready || loading}\r\n      onMouseUp={toggleMic}\r\n    >\r\n      Speak\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Microphone;\r\n","import { Duplex, DuplexOptions } from \"readable-stream\";\r\nimport { KaldiRecognizer } from \"vosk-browser\";\r\n\r\nexport class AudioStreamer extends Duplex {\r\n  constructor(public recognizer: KaldiRecognizer, options?: DuplexOptions) {\r\n    super(options);\r\n  }\r\n\r\n  public _write(chunk: AudioBuffer, encoding: any, callback: any) {\r\n    const buffer = chunk.getChannelData(0);\r\n    if (this.recognizer && buffer.byteLength > 0) {\r\n      this.recognizer.acceptWaveform(chunk);\r\n    }\r\n    callback();\r\n  }\r\n}\r\n","import { Writable } from \"readable-stream\";\r\n\r\nexport const audioBucket = new Writable({\r\n  write: function (chunk, encoding, callback) {\r\n    callback();\r\n  },\r\n  objectMode: true,\r\n  decodeStrings: false,\r\n});\r\n","import { Button} from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  box-sizing: border-box;\r\n  margin-left: 0.5rem;\r\n`;\r\ninterface Props {\r\n  onModelChange: (value: string) => void;\r\n  onModelSelect: (value: string) => void;\r\n  loading: boolean;\r\n}\r\n\r\nexport const models: Array<{ name: string; path: string }> = [\r\n  \r\n  {\r\n    name: \"Indian English\",\r\n    path: \"vosk-model-small-en-in-0.4.tar.gz\",\r\n  },\r\n  {\r\n    name: \"English\",\r\n    path: \"vosk-model-small-en-us-0.15.tar.gz\",\r\n  },\r\n];\r\n\r\nconst ModelLoader: React.FunctionComponent<Props> = ({\r\n  onModelSelect,\r\n  loading,\r\n}) => {\r\n  const [model, setModel] = useState(models[0].path);\r\n  useEffect(() => {\r\n    onModelSelect(model)\r\n  }, [])\r\n  \r\n  return (\r\n    <Wrapper>\r\n      <span>\r\n        {loading ? \"Please wait while Loading\" : \"Click on Speak to Start Speaking\"}\r\n      </span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ModelLoader;\r\n","import { Chart as ChartJS, registerables } from \"chart.js\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport \"chartjs-adapter-date-fns\";\r\n\r\n//this sets the display language. In the documentation it uses \"de\", which will display dates in German.\r\nChartJS.register(...registerables);\r\n\r\nfunction Graph(props) {\r\n  const ref = useRef();\r\n  const [state, setState] = useState({});\r\n  const [calc, setCalc] = useState({});\r\n  useEffect(() => {\r\n    setState(props.data);\r\n    setCalc(props.data2);\r\n  }, [props.data, props.data2]);\r\n\r\n  const updateChart = () => {\r\n    const chart = ref.current.chartInstance;\r\n    chart.data.datasets[0].data = state;\r\n    chart.update();\r\n  };\r\n  var mins = {\r\n    temp: 0,\r\n    vel: 200,\r\n    dens: 0,\r\n  };\r\n  var maxes = {\r\n    temp: 500000,\r\n    vel: 800,\r\n    dens: 8,\r\n  };\r\n  var data = {\r\n    labels: [\r\n      \"00:00\",\r\n      \"01:00\",\r\n      \"02:00\",\r\n      \"03:00\",\r\n      \"04:00\",\r\n      \"05:00\",\r\n      \"06:00\",\r\n      \"07:00\",\r\n      \"08:00\",\r\n      \"09:00\",\r\n      \"10:00\",\r\n      \"11:00\",\r\n      \"12:00\",\r\n      \"13:00\",\r\n      \"14:00\",\r\n      \"15:00\",\r\n      \"16:00\",\r\n      \"17:00\",\r\n      \"18:00\",\r\n      \"19:00\",\r\n      \"20:00\",\r\n      \"21:00\",\r\n      \"22:00\",\r\n      \"23:00\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        type: props.type,\r\n        fill: \"start\",\r\n        backgroundColor: function (context, options) {\r\n          const ctx = context.chart.ctx;\r\n          const gradient = ctx.createLinearGradient(0, 0, 0, 380);\r\n          gradient.addColorStop(0, \"rgba(210, 43, 43,1)\");\r\n          //gradient.addColorStop(0.6, \"rgba(253, 218, 13,0.75)\");\r\n          gradient.addColorStop(1, \"rgba(0, 150, 255,0.5)\");\r\n          return gradient;\r\n        },\r\n\r\n        borderRadius: 20,\r\n        strokeColor: \"#ff6c23\",\r\n        pointColor: \"#f0f000\",\r\n        pointStrokeColor: \"#f06c23\",\r\n        pointHighlightFill: \"#fff000\",\r\n        pointHighlightStroke: \"#0f6c23\",\r\n        data: state,\r\n      },\r\n      {\r\n        type: \"line\",\r\n        label: \"Calculated\",\r\n        borderColor: \"rgba(0, 0, 0,0.5)\",\r\n        fill: false,\r\n        data: calc,\r\n      },\r\n    ],\r\n  };\r\n  var options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        min: mins[props.label],\r\n        max: maxes[props.label],\r\n\r\n        title: {\r\n          display: true,\r\n          text: props.title,\r\n        },\r\n        ticks: {\r\n          callback: function (val, index) {\r\n            // Hide every 2nd tick label\r\n            return val > 10000 ? `${val / 100000}` : val;\r\n          },\r\n        },\r\n      },\r\n      x: { title: { display: true, text: \"Hours of the Day\" } },\r\n    },\r\n    datasetStrokeWidth: 3,\r\n    pointDotStrokeWidth: 4,\r\n    tooltipFillColor: \"rgba(0,0,0,0.8)\",\r\n    tooltipFontStyle: \"bold\",\r\n    tooltipTemplate:\r\n      \"<%if (label){%><%=label + ' hod' %>: <%}%><%= value + '°C' %>\",\r\n    scaleLabel: \"<%= Number(value).toFixed(0).replace('.', ',') + '°C'%>\",\r\n  };\r\n  return (\r\n    <>\r\n      {props.type && (\r\n        <Chart\r\n          type={props.type}\r\n          options={options}\r\n          data={data}\r\n          datasetIdKey='id'\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","import { Button } from \"antd\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { SoundOutlined, SoundFilled } from \"@ant-design/icons\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useAudio = (url) => {\r\n  const [audio, setAudio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(true);\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  useEffect(() => {\r\n    setAudio(new Audio(url));\r\n    setPlaying(true);\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    playing ? audio.play() : audio.pause();\r\n    audio.currentTime = 0;\r\n  }, [playing]);\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener(\"ended\", () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\r\n    };\r\n  }, [audio]);\r\n\r\n  return [playing, toggle];\r\n};\r\n\r\nconst AudioPlayer = (props) => {\r\n  const [playing, toggle] = useAudio(props.url);\r\n  useEffect(() => {\r\n    toggle();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type={playing ? \"text\" : \"default\"}\r\n        shape='circle'\r\n        icon={playing ? <SoundFilled /> : <SoundOutlined />}\r\n        onClick={toggle}\r\n        size='large'\r\n      />\r\n      <br></br>\r\n      <h2>\r\n        Average velocity on{\" \"}\r\n        {props.date ? props.date.split(\"+\").join(\" \") : \"NaN\"} is{\" \"}\r\n        {props.vel ? props.vel : \"NaN\"}\r\n      </h2>\r\n    </div>\r\n  ); /*\r\n  return (\r\n    <>\r\n      <Button type='primary' icon={<SoundOutlined />} />\r\n      <ReactAudioPlayer\r\n        src='https://spacewapi.herokuapp.com/avgvelocity/?text=11+january+twentytwenty'\r\n        autoPlay={true}\r\n      />\r\n    </>\r\n  );*/\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import { Tabs, Row, Col, Divider, Tag, Button, Badge } from \"antd\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  CloseCircleFilled,\r\n  ExclamationCircleFilled,\r\n  CheckCircleFilled,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Graph from \"./Graph\";\r\nimport AudioPlayer from \"./AudioPlayer\";\r\nconst operations = (\r\n  <Button icon={<SettingOutlined />} size='small'>\r\n    Chart Settings\r\n  </Button>\r\n);\r\nconst DisplayFrame = (props) => {\r\n  console.log(Object.keys(props.graphdata).length);\r\n  return (\r\n    <Fragment>\r\n      <Divider orientation='left'>Weather Alerts</Divider>\r\n      <Row>\r\n        <Col span={12}>\r\n          <div\r\n            color='moderate'\r\n            style={{\r\n              backgroundColor: \"#f6f6f6\",\r\n              borderRadius: \"50px\",\r\n              padding: \"0.9rem\",\r\n              paddingTop: \"1.1rem\",\r\n              paddingRight: \"0rem\",\r\n              margin: \"0.9rem\",\r\n            }}\r\n          >\r\n            <Row>\r\n              {\" \"}\r\n              <Col span={8}>\r\n                {props.graphs.val && (\r\n                  <Fragment>\r\n                    {parseFloat(props.graphs.val.split(\"k\")) > 600 ? (\r\n                      <Badge\r\n                        style={{ backgroundColor: \"#880808\" }}\r\n                        count={\"severe\"}\r\n                      >\r\n                        <CloseCircleFilled\r\n                          style={{ color: \"#DC143C\", fontSize: \"3rem\" }}\r\n                        />\r\n                      </Badge>\r\n                    ) : parseFloat(props.graphs.val.split(\"k\")) > 400 ? (\r\n                      <Badge\r\n                        style={{ backgroundColor: \"#FFBF00\" }}\r\n                        count={\"alert\"}\r\n                      >\r\n                        <ExclamationCircleFilled\r\n                          style={{ color: \"#E49B0F\", fontSize: \"3rem\" }}\r\n                        />\r\n                      </Badge>\r\n                    ) : (\r\n                      <Badge\r\n                        style={{ backgroundColor: \"#4CBB17\" }}\r\n                        count={\"safe\"}\r\n                      >\r\n                        <CheckCircleFilled\r\n                          style={{ color: \"#097969\", fontSize: \"3rem\" }}\r\n                        />\r\n                      </Badge>\r\n                    )}\r\n                  </Fragment>\r\n                )}\r\n\r\n                <p></p>\r\n              </Col>\r\n              <Col span={10} style={{ textAlign: \"left\" }}>\r\n                Temperature:{\" \"}\r\n                <b>{Math.round(props.graphs.avg_temp / 1e4) / 100} MK </b>\r\n                <br></br> Density:{\" \"}\r\n                <b>{Math.round(props.graphs.avg_den * 100) / 100} n/cc</b>\r\n                <br></br> Speed: <b>{props.graphs.val}</b>\r\n              </Col>{\" \"}\r\n            </Row>{\" \"}\r\n          </div>\r\n        </Col>\r\n        <Col span={12}>\r\n          {props.show && (\r\n            <AudioPlayer\r\n              date={props.graphs.date}\r\n              vel={props.graphs.val}\r\n              url={props.graphs.url}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      {Object.keys(props.graphdata).length !== 0 && (\r\n        <Tabs tabBarExtraContent={operations} defaultActiveKey='1'>\r\n          <Tabs.TabPane tab='Temperature' key='1'>\r\n            <Graph\r\n              type='bar'\r\n              data={props.graphdata.temp}\r\n              title='Temperature (MK)'\r\n              label='temp'\r\n            />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab='Velocity' key='2'>\r\n            <Graph\r\n              type='line'\r\n              data={props.graphdata.velocity}\r\n              data2={props.graphdata.calcvel}\r\n              title='Wind Speed (km/s)'\r\n              label='vel'\r\n            />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab='Density' key='3'>\r\n            <Graph\r\n              type='line'\r\n              data={props.graphdata.density}\r\n              title='Density (n/cc)'\r\n              label='dens'\r\n            />\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDisplayFrame.defaultProps = {\r\n  graphdata: {\r\n    temp: [\r\n      256031, 254548, 301362, 213076, 202391, 188560, 182158, 140751, 138451,\r\n      125780, 123067, 120155, 105004, 9999999, 63296, 66112, 104670, 139632,\r\n      135436, 124822, 99517, 89187, 76672, 76558, 65430, 70923, 62905, 112596,\r\n      450530, 263192, 426853, 434324, 154341, 173847, 172816, 56683, 121476,\r\n      134847, 243691, 265442, 315931, 305047, 283811, 270334, 383326, 372681,\r\n      407739, 393890,\r\n    ],\r\n  },\r\n  graphs: {\r\n    val: \"509.33km/s\",\r\n  },\r\n};\r\nexport default DisplayFrame;\r\n","import {\r\n  InputNumber,\r\n  DatePicker,\r\n  Divider,\r\n  Radio,\r\n  Row,\r\n  Col,\r\n  Switch,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nconst options = [\r\n  { label: \"Flow Speed\", value: \"velocity\" },\r\n  { label: \"Proton Temperature\", value: \"temp\" },\r\n  { label: \"Proton Density\", value: \"density\" },\r\n  /*{ label: \"Magnetic Field\", value: \"mag\" },\r\n  { label: \"Flow Pressure\", value: \"pres\" },*/\r\n];\r\n\r\nconst ManualInput = (props) => {\r\n  let month = [\r\n    \"january\",\r\n    \"february\",\r\n    \"march\",\r\n    \"april\",\r\n    \"may\",\r\n    \"june\",\r\n    \"july\",\r\n    \"august\",\r\n    \"september\",\r\n    \"october\",\r\n    \"november\",\r\n    \"december\",\r\n  ];\r\n  const onChange = () => {\r\n    props.setShowGraphs(!props.showGraphs);\r\n  };\r\n  const [type, setType] = useState(1);\r\n  const onselect = (ele) => {\r\n    setType(ele.target.value);\r\n  };\r\n  const onSet = (ele, elestring) => {\r\n    console.log(elestring || ele);\r\n    if (elestring) {\r\n      elestring =\r\n        elestring.slice(0, 3) +\r\n        month[parseInt(elestring.slice(3, 5)) - 1] +\r\n        elestring.slice(5);\r\n    }\r\n    props.manualInp(elestring || ele);\r\n  };\r\n  return (\r\n    <>\r\n      <Radio.Group name='radiogroup' defaultValue={type}>\r\n        <Radio value={1} onChange={onselect}>\r\n          Date\r\n        </Radio>\r\n        {/* <Radio value={2} onChange={onselect}>\r\n          CR Number\r\n        </Radio> */}\r\n      </Radio.Group>\r\n      {type === 1 ? (\r\n        <DatePicker onChange={onSet} format={\"DD/MM/YYYY\"} />\r\n      ) : (\r\n        <InputNumber min={1905} max={2255} onChange={onSet} />\r\n      )}\r\n      <Divider orientation='center'>Select Plasma Properties</Divider>\r\n      <Switch\r\n        defaultChecked\r\n        onChange={onChange}\r\n        value={props.setShowGraphs}\r\n      />{\" \"}\r\n      Show Graphs\r\n      <Checkbox.Group\r\n        options={options}\r\n        defaultValue={[\"velocity\", \"temp\", \"density\"]}\r\n        onChange={onChange}\r\n      />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManualInput;\r\n","import wordsToNumbers from \"words-to-numbers\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Space, Collapse } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport DisplayFrame from \"./ui/DisplayFrame\";\r\nimport ManualInput from \"./ui/ManualInput\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction App(props) {\r\n  const [graphs, setGraphs] = useState({});\r\n  const [graphdata, setGraphdata] = useState({});\r\n  const [quer, setQuer] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [showGraphs, setShowGraphs] = useState(true);\r\n  useEffect(() => {\r\n    let final = \"\";\r\n    props.utterances.forEach((ele) => {\r\n      final =\r\n        final +\r\n        \"+\" +\r\n        wordsToNumbers(ele.text, { impliedHundreds: true })\r\n          .toString()\r\n          .split(\" \")\r\n          .join(\"\");\r\n    });\r\n    console.log(final);\r\n    setQuer(final);\r\n  }, [props, props.utterances]);\r\n\r\n  const fetchData = async () => {};\r\n\r\n  const myurl = \"swasti-framework.azurewebsites.net\"; //\"127.0.0.1:5000\"; //\r\n\r\n  const fetchVelData = async () => {\r\n    let tempurl = `${myurl}/avgvelocity/?text=${quer}`;\r\n    const res = await fetch(\"https://\" + tempurl);\r\n    const data = await res.json();\r\n    setGraphs(data);\r\n    setShow(true);\r\n    if (showGraphs) {\r\n      const res2 = await fetch(`https://${myurl}/get_obs?param=${quer}`);\r\n      const data2 = await res2.json();\r\n      console.log(data2);\r\n      setGraphdata(data2);\r\n    }\r\n  };\r\n\r\n  const manualInp = (query) => {\r\n    query && setQuer(query.split(\"/\").join(\"+\"));\r\n  };\r\n\r\n  // const switched=()=>{\r\n  //  setShowGraphs(!showGraphs);\r\n  //  setGraphs({});\r\n  //  set\r\n  // }\r\n\r\n  return (\r\n    <Space\r\n      direction='vertical'\r\n      size='middle'\r\n      style={{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n      }}\r\n      className='panel'\r\n    >\r\n      <h4>OR</h4>\r\n      <Collapse defaultActiveKey={[\"0\"]}>\r\n        <Panel header='Manual Input' key='1'>\r\n          <ManualInput\r\n            manualInp={manualInp}\r\n            showGraphs={showGraphs}\r\n            setShowGraphs={setShowGraphs}\r\n          />\r\n        </Panel>\r\n      </Collapse>\r\n\r\n      <Space size='small'>\r\n        <Button type='primary' onClick={() => fetchVelData()}>\r\n          Get Graphs\r\n        </Button>\r\n        <Button\r\n          icon={<DeleteOutlined />}\r\n          type='primary'\r\n          danger\r\n          onClick={props.clearVoice}\r\n          color='#1E3388'\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Space>\r\n\r\n      <DisplayFrame graphs={graphs} show={show} graphdata={graphdata} />\r\n    </Space>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { createModel, KaldiRecognizer, Model } from \"vosk-browser\";\r\nimport Microphone from \"./microphone\";\r\nimport ModelLoader from \"./model-loader\";\r\nimport App from './App'\r\nimport DateWidget from \"./ui/DateWidget\";\r\n\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 1rem auto;\r\n`;\r\n\r\nconst ResultContainer = styled.div`\r\n  width: 100%;\r\n  margin: 1rem auto;\r\n  border: 1px solid #aaaaaa;\r\n  padding: 1rem;\r\n  resize: vertical;\r\n  overflow: auto;\r\n  \r\n`;\r\n\r\nconst Word = styled.span<{ confidence: number }>`\r\n  color: ${({ confidence }) => {\r\n    const color = Math.max(255 * (1 - confidence) - 20, 0);\r\n    return `rgb(${color},${color},${color})`;\r\n  }};\r\n  white-space: normal;\r\n`;\r\n\r\ninterface VoskResult {\r\n  result: Array<{\r\n    conf: number;\r\n    start: number;\r\n    end: number;\r\n    word: string;\r\n  }>;\r\n  text: string;\r\n}\r\n\r\nexport const Recognizer: React.FunctionComponent = () => {\r\n  const [utterances, setUtterances] = useState<VoskResult[]>([]);\r\n  const [partial, setPartial] = useState(\"\");\r\n\r\n  const [loadedModel, setLoadedModel] = useState<{\r\n    model: Model;\r\n    path: string;\r\n  }>();\r\n  const [recognizer, setRecognizer] = useState<KaldiRecognizer>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const loadModel = async (path: string) => {\r\n    setLoading(true);\r\n    loadedModel?.model.terminate();\r\n\r\n    const model = await createModel(process.env.PUBLIC_URL + \"/models/\" + path);\r\n\r\n    setLoadedModel({ model, path });\r\n    const recognizer = new model.KaldiRecognizer(48000);\r\n    recognizer.setWords(true);\r\n    recognizer.on(\"result\", (message: any) => {\r\n      const result: VoskResult = message.result;\r\n      setUtterances((utt: VoskResult[]) => [...utt, result]);\r\n    });\r\n\r\n    recognizer.on(\"partialresult\", (message: any) => {\r\n      setPartial(message.result.partial);\r\n    });\r\n\r\n    setRecognizer(() => {\r\n      setLoading(false);\r\n      setReady(true);\r\n      return recognizer;\r\n    });\r\n  };\r\n\r\n  const clearVoice= () =>{\r\n    setUtterances((utt: VoskResult[]) => []);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModelLoader\r\n        onModelChange={(path) => setReady(loadedModel?.path === path)}\r\n        onModelSelect={(path) => {\r\n          if (loadedModel?.path !== path) {\r\n            loadModel(path);\r\n          }\r\n        }}\r\n        loading={loading}\r\n      />\r\n      \r\n      <Header>\r\n        <Microphone recognizer={recognizer} loading={loading} ready={ready} />\r\n      </Header>\r\n      <ResultContainer>\r\n        {utterances.map((utt, uindex) =>\r\n          utt?.result?.map((word, windex) => (\r\n            <Word\r\n              key={`${uindex}-${windex}`}\r\n              confidence={word.conf}\r\n              title={`Confidence: ${(word.conf * 100).toFixed(2)}%`}\r\n            >\r\n              {word.word}{\" \"}\r\n            </Word>\r\n          ))\r\n        )}\r\n        <span key=\"partial\">{partial}</span>\r\n      </ResultContainer>\r\n      \r\n      <App utterances={utterances} clearVoice={clearVoice}/>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Breadcrumb, Layout, Menu, Button, PageHeader } from \"antd\";\r\nimport { Recognizer } from \"../recognizer\";\r\nconst { Header, Content, Footer } = Layout;\r\nconst LayoutFrame = (props) => {\r\n  const dayNames = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursdsay\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const month = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  var today = new Date(),\r\n    date =\r\n      month[today.getMonth()] +\r\n      \"  \" +\r\n      today.getDay() +\r\n      \", \" +\r\n      today.getFullYear();\r\n  return (\r\n    <Layout className='layout'>\r\n      <PageHeader\r\n        ghost={false}\r\n        className='site-page-header'\r\n        title={\r\n          <span>\r\n            <span\r\n              style={{\r\n                fontSize: \"25px\",\r\n                color: \"white\",\r\n                paddingBottom: \"0\",\r\n                marginBottom: \"0\",\r\n              }}\r\n            >\r\n              SWASTi Framework{\" \"}\r\n            </span>\r\n\r\n            <span style={{ color: \"#d9d9d9\", fontSize: \"15px\" }}>\r\n              for space weather prediction\r\n            </span>\r\n          </span>\r\n        }\r\n        extra={[\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n              color: \"white\",\r\n              padding: \"0px\",\r\n              margin: \"0px\",\r\n            }}\r\n          >\r\n            <span style={{ fontSize: \"20px\" }}>{dayNames[today.getDay()]}</span>\r\n            <h5 style={{ color: \"white\" }}>{date}</h5>\r\n          </div>,\r\n        ]}\r\n      />\r\n      {/* <Header>\r\n        <div>\r\n          <h1 style={{ color: \"white\" }}>SWASTi Framework</h1>\r\n        </div>\r\n      </Header> */}\r\n      <Layout>\r\n        <Content\r\n          style={{\r\n            padding: \"0 50px\",\r\n          }}\r\n        >\r\n          {/* <div className='site-layout-content'>\r\n      <DateWidget />\r\n    </div> */}\r\n          <br />\r\n          <div className='site-layout-content'>\r\n            <Recognizer />\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n      <Footer\r\n        style={{\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Footnote ©2022 Footnote\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutFrame;\r\n","import \"antd/dist/antd.min.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport { Recognizer } from \"./recognizer\";\r\nimport LayoutFrame from \"./ui/LayoutFrame\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \r\n      <LayoutFrame />\r\n      \r\n    \r\n      \r\n      \r\n\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}