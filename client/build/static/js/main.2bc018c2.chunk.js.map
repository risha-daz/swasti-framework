{"version":3,"sources":["microphone.tsx","audiostreamer.ts","audiobucket.ts","model-loader.tsx","ui/Weekday.js","ui/ChartSettings.js","ui/Graph.js","ui/AudioPlayer.js","ui/DisplayFrame.js","ui/ManualInput.js","App.js","recognizer.tsx","ui/LayoutFrame.js","index.tsx"],"names":["micStream","audioStreamer","AudioStreamer","recognizer","options","chunk","encoding","callback","buffer","getChannelData","this","byteLength","acceptWaveform","Duplex","audioBucket","Writable","write","objectMode","decodeStrings","Microphone","loading","ready","useState","muted","setMuted","startRecognitionStream","useCallback","a","mediaStream","navigator","mediaDevices","getUserMedia","video","audio","echoCancellation","noiseSuppression","MicrophoneStream","bufferSize","setStream","console","error","unpipe","pipe","useEffect","icon","AudioMutedOutlined","AudioOutlined","disabled","onMouseUp","Wrapper","styled","div","models","Button","name","path","ModelLoader","onModelSelect","model","Weekday","Card","Meta","props","span","ind","onClick","setCurr","num","hoverable","size","title","data","substr","parseFloat","CloseCircleFilled","style","color","fontSize","ExclamationCircleFilled","CheckCircleFilled","Math","round","ChartSettings","isModalOpen","setIsModalOpen","onChange","value","log","onAfterChange","SettingOutlined","visible","onOk","onCancel","step","min","max","defaultValue","range","ChartJS","register","registerables","Graph","useRef","state","setState","calc","setCalc","data2","labels","datasets","type","fill","backgroundColor","label","context","gradient","chart","ctx","createLinearGradient","addColorStop","borderRadius","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","borderColor","responsive","plugins","legend","display","scales","y","temp","vel","dens","dst","text","ticks","val","index","x","datasetStrokeWidth","pointDotStrokeWidth","tooltipFillColor","tooltipFontStyle","tooltipTemplate","scaleLabel","datasetIdKey","AudioPlayer","url","Audio","setAudio","playing","setPlaying","play","pause","currentTime","addEventListener","removeEventListener","useAudio","toggle","shape","SoundFilled","SoundOutlined","date","split","join","operations","DisplayFrame","orientation","padding","paddingTop","paddingRight","margin","graphs","count","textAlign","avg_temp","avg_den","show","Object","keys","graphdata","length","tabBarExtraContent","defaultActiveKey","TabPane","tab","velocity","calcvel","density","justify","gutter","align","LeftOutlined","weekly","map","item","curr","RightOutlined","defaultProps","ManualInput","month","setShowGraphs","showGraphs","setType","onSet","ele","elestring","slice","parseInt","manualInp","Group","target","format","defaultChecked","Panel","Collapse","App","setGraphs","setWeek","setGraphdata","weeklygraphdata","setWeeklyGraphdata","quer","setQuer","setShow","setCurrent","final","utterances","forEach","wordsToNumbers","impliedHundreds","toString","myurl","fetchVelData","tempurl","fetch","res","json","res2","res3","data3","res4","data4","direction","className","header","query","DeleteOutlined","danger","clearVoice","Header","ResultContainer","Word","confidence","Recognizer","setUtterances","partial","setPartial","loadedModel","setLoadedModel","setRecognizer","setLoading","setReady","loadModel","terminate","createModel","KaldiRecognizer","setWords","on","message","result","utt","onModelChange","uindex","word","windex","conf","toFixed","Content","Layout","Footer","LayoutFrame","today","Date","getMonth","getDay","getFullYear","ghost","paddingBottom","marginBottom","extra","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bc018c2.chunk.js","sourcesContent":["import { Button } from \"antd\";\r\nimport { AudioMutedOutlined, AudioOutlined } from \"@ant-design/icons\";\r\nimport MicrophoneStream from \"microphone-stream\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { AudioStreamer } from \"./audiostreamer\";\r\nimport { audioBucket } from \"./audiobucket\";\r\nimport { KaldiRecognizer } from \"vosk-browser\";\r\n\r\ninterface Props {\r\n  recognizer: KaldiRecognizer | undefined;\r\n  ready: boolean;\r\n  loading: boolean;\r\n}\r\n\r\nlet micStream: any;\r\nlet audioStreamer: AudioStreamer;\r\n\r\nconst Microphone: React.FunctionComponent<Props> = ({\r\n  recognizer,\r\n  loading,\r\n  ready,\r\n}) => {\r\n  const [muted, setMuted] = useState(true);\r\n\r\n  const startRecognitionStream = useCallback(async () => {\r\n    if (recognizer) {\r\n      setMuted(true);\r\n\r\n      if (!micStream) {\r\n        let mediaStream = null;\r\n        try {\r\n          mediaStream = await navigator.mediaDevices.getUserMedia({\r\n            video: false,\r\n            audio: {\r\n              echoCancellation: true,\r\n              noiseSuppression: true,\r\n            },\r\n          });\r\n\r\n          micStream = new MicrophoneStream({\r\n            objectMode: true,\r\n            bufferSize: 1024,\r\n          });\r\n\r\n          micStream.setStream(mediaStream);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      } else {\r\n        micStream.unpipe(audioStreamer);\r\n        micStream.pipe(audioBucket);\r\n      }\r\n\r\n      audioStreamer = new AudioStreamer(recognizer, {\r\n        objectMode: true,\r\n      });\r\n    }\r\n  }, [recognizer]);\r\n\r\n  useEffect(() => {\r\n    startRecognitionStream();\r\n  }, [recognizer]);\r\n\r\n  useEffect(() => {\r\n    setMuted(true);\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!muted) {\r\n      micStream?.unpipe(audioBucket);\r\n      micStream?.pipe(audioStreamer);\r\n    } else {\r\n      micStream?.unpipe(audioStreamer);\r\n      micStream?.pipe(audioBucket);\r\n    }\r\n  }, [muted]);\r\n\r\n  const toggleMic = () => {\r\n    setMuted((muted) => !muted);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      icon={muted ? <AudioMutedOutlined /> : <AudioOutlined />}\r\n      disabled={!ready || loading}\r\n      onMouseUp={toggleMic}\r\n    >\r\n      Speak\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Microphone;\r\n","import { Duplex, DuplexOptions } from \"readable-stream\";\r\nimport { KaldiRecognizer } from \"vosk-browser\";\r\n\r\nexport class AudioStreamer extends Duplex {\r\n  constructor(public recognizer: KaldiRecognizer, options?: DuplexOptions) {\r\n    super(options);\r\n  }\r\n\r\n  public _write(chunk: AudioBuffer, encoding: any, callback: any) {\r\n    const buffer = chunk.getChannelData(0);\r\n    if (this.recognizer && buffer.byteLength > 0) {\r\n      this.recognizer.acceptWaveform(chunk);\r\n    }\r\n    callback();\r\n  }\r\n}\r\n","import { Writable } from \"readable-stream\";\r\n\r\nexport const audioBucket = new Writable({\r\n  write: function (chunk, encoding, callback) {\r\n    callback();\r\n  },\r\n  objectMode: true,\r\n  decodeStrings: false,\r\n});\r\n","import { Button} from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  box-sizing: border-box;\r\n  margin-left: 0.5rem;\r\n`;\r\ninterface Props {\r\n  onModelChange: (value: string) => void;\r\n  onModelSelect: (value: string) => void;\r\n  loading: boolean;\r\n}\r\n\r\nexport const models: Array<{ name: string; path: string }> = [\r\n  \r\n  {\r\n    name: \"Indian English\",\r\n    path: \"vosk-model-small-en-in-0.4.tar.gz\",\r\n  },\r\n  {\r\n    name: \"English\",\r\n    path: \"vosk-model-small-en-us-0.15.tar.gz\",\r\n  },\r\n];\r\n\r\nconst ModelLoader: React.FunctionComponent<Props> = ({\r\n  onModelSelect,\r\n  loading,\r\n}) => {\r\n  const [model, setModel] = useState(models[0].path);\r\n  useEffect(() => {\r\n    onModelSelect(model)\r\n  }, [])\r\n  \r\n  return (\r\n    <Wrapper>\r\n      <span>\r\n        {loading ? \"Please wait while Loading\" : \"Click on Speak to Start Speaking\"}\r\n      </span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ModelLoader;\r\n","import { Card, Col, Tag, Button, Badge } from \"antd\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  CloseCircleFilled,\r\n  ExclamationCircleFilled,\r\n  CheckCircleFilled,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nconst { Meta } = Card;\r\nconst Weekday = (props) => {\r\n  const func = () => {\r\n    props.setCurr(props.num);\r\n  };\r\n  return (\r\n    <Col span={props.ind ? 4 : 3}>\r\n      <div onClick={() => func()}>\r\n        <Card\r\n          hoverable='true'\r\n          size={props.ind ? \"default\" : \"small\"}\r\n          title={props.data[0].substr(5, 6)}\r\n        >\r\n          <h1>\r\n            {props.data[2] && (\r\n              <Fragment>\r\n                {parseFloat(props.data[2]) > 600 ? (\r\n                  <CloseCircleFilled\r\n                    style={{\r\n                      color: \"#DC143C\",\r\n                      fontSize: props.ind ? \"2.5rem\" : \"2rem\",\r\n                    }}\r\n                  />\r\n                ) : parseFloat(props.data[2]) > 400 ? (\r\n                  <ExclamationCircleFilled\r\n                    style={{\r\n                      color: \"#E49B0F\",\r\n                      fontSize: props.ind ? \"2.5rem\" : \"2rem\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <CheckCircleFilled\r\n                    style={{\r\n                      color: \"#097969\",\r\n                      fontSize: props.ind ? \"2.5rem\" : \"2rem\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n            <Tag color='blue'>{Math.round(props.data[1] / 1e4) / 100} MK</Tag>\r\n            <Tag color='cyan'>{Math.round(props.data[2])} km/s</Tag>\r\n            <Tag color='purple'>{props.data[3]} n/cc</Tag>\r\n          </h1>\r\n        </Card>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Weekday;\r\n","import { Button, Modal, Slider } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\nconst ChartSettings = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const onChange = (value) => {\r\n    console.log(\"onChange: \", value);\r\n  };\r\n  const onAfterChange = (value) => {\r\n    console.log(\"onAfterChange: \", value);\r\n  };\r\n  return (\r\n    <>\r\n      <Button icon={<SettingOutlined />} onClick={showModal} size='small'>\r\n        Chart Settings\r\n      </Button>\r\n      <Modal\r\n        title='Chart Settings'\r\n        visible={isModalOpen}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        Temperature range:\r\n        <Slider\r\n          step={1}\r\n          min={0}\r\n          max={10}\r\n          defaultValue={6}\r\n          onChange={onChange}\r\n          onAfterChange={onAfterChange}\r\n        />\r\n        Velocity Range:\r\n        <Slider\r\n          range\r\n          min={0}\r\n          max={1000}\r\n          step={100}\r\n          defaultValue={[200, 800]}\r\n          onChange={onChange}\r\n          onAfterChange={onAfterChange}\r\n        />\r\n        Density Range:\r\n        <Slider\r\n          range\r\n          step={1}\r\n          min={0}\r\n          max={14}\r\n          defaultValue={[0, 10]}\r\n          onChange={onChange}\r\n          onAfterChange={onAfterChange}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default ChartSettings;\r\n","import { Chart as ChartJS, registerables } from \"chart.js\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport \"chartjs-adapter-date-fns\";\r\n\r\n//this sets the display language. In the documentation it uses \"de\", which will display dates in German.\r\nChartJS.register(...registerables);\r\n\r\nfunction Graph(props) {\r\n  const ref = useRef();\r\n  const [state, setState] = useState({});\r\n  const [calc, setCalc] = useState({});\r\n  useEffect(() => {\r\n    setState(props.data);\r\n    setCalc(props.data2);\r\n  }, [props.data, props.data2]);\r\n\r\n  const updateChart = () => {\r\n    const chart = ref.current.chartInstance;\r\n    chart.data.datasets[0].data = state;\r\n    chart.update();\r\n  };\r\n  var mins = {\r\n    temp: 0,\r\n    vel: 200,\r\n    dens: 0,\r\n    dst: -10,\r\n  };\r\n  var maxes = {\r\n    temp: 600000,\r\n    vel: 800,\r\n    dens: 10,\r\n    dst: 10,\r\n  };\r\n  var data = {\r\n    labels: [\r\n      \"00:00\",\r\n      \"01:00\",\r\n      \"02:00\",\r\n      \"03:00\",\r\n      \"04:00\",\r\n      \"05:00\",\r\n      \"06:00\",\r\n      \"07:00\",\r\n      \"08:00\",\r\n      \"09:00\",\r\n      \"10:00\",\r\n      \"11:00\",\r\n      \"12:00\",\r\n      \"13:00\",\r\n      \"14:00\",\r\n      \"15:00\",\r\n      \"16:00\",\r\n      \"17:00\",\r\n      \"18:00\",\r\n      \"19:00\",\r\n      \"20:00\",\r\n      \"21:00\",\r\n      \"22:00\",\r\n      \"23:00\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        type: props.type,\r\n        fill: \"start\",\r\n        backgroundColor:\r\n          props.label === \"dst\"\r\n            ? \"rgba(211, 211, 211,0.5)\"\r\n            : function (context, options) {\r\n                const ctx = context.chart.ctx;\r\n                const gradient = ctx.createLinearGradient(0, 0, 0, 380);\r\n                gradient.addColorStop(0, \"rgba(210, 43, 43,1)\");\r\n                //gradient.addColorStop(0.6, \"rgba(253, 218, 13,0.75)\");\r\n                gradient.addColorStop(1, \"rgba(0, 150, 255,0.5)\");\r\n                return gradient;\r\n              },\r\n\r\n        borderRadius: 20,\r\n        strokeColor: \"#ff6c23\",\r\n        pointColor: \"#f0f000\",\r\n        pointStrokeColor: \"#f06c23\",\r\n        pointHighlightFill: \"#fff000\",\r\n        pointHighlightStroke: \"#0f6c23\",\r\n        data: state,\r\n      },\r\n      {\r\n        type: \"line\",\r\n        label: \"Calculated\",\r\n        borderColor: \"rgba(0, 0, 0,0.5)\",\r\n        fill: false,\r\n        data: calc,\r\n      },\r\n    ],\r\n  };\r\n  var options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        min: mins[props.label],\r\n        max: maxes[props.label],\r\n\r\n        title: {\r\n          display: true,\r\n          text: props.title,\r\n        },\r\n        ticks: {\r\n          callback: function (val, index) {\r\n            // Hide every 2nd tick label\r\n            return val > 10000 ? `${val / 100000}` : val;\r\n          },\r\n        },\r\n      },\r\n      x: { title: { display: true, text: \"Hours of the Day\" } },\r\n    },\r\n    datasetStrokeWidth: 3,\r\n    pointDotStrokeWidth: 4,\r\n    tooltipFillColor: \"rgba(0,0,0,0.8)\",\r\n    tooltipFontStyle: \"bold\",\r\n    tooltipTemplate:\r\n      \"<%if (label){%><%=label + ' hod' %>: <%}%><%= value + '°C' %>\",\r\n    scaleLabel: \"<%= Number(value).toFixed(0).replace('.', ',') + '°C'%>\",\r\n  };\r\n  return (\r\n    <>\r\n      {props.type && (\r\n        <Chart\r\n          type={props.type}\r\n          options={options}\r\n          data={data}\r\n          datasetIdKey='id'\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","import { Button } from \"antd\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { SoundOutlined, SoundFilled } from \"@ant-design/icons\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useAudio = (url) => {\r\n  const [audio, setAudio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(true);\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  useEffect(() => {\r\n    setAudio(new Audio(url));\r\n    setPlaying(true);\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    playing ? audio.play() : audio.pause();\r\n    audio.currentTime = 0;\r\n  }, [playing]);\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener(\"ended\", () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\r\n    };\r\n  }, [audio]);\r\n\r\n  return [playing, toggle];\r\n};\r\n\r\nconst AudioPlayer = (props) => {\r\n  const [playing, toggle] = useAudio(props.url);\r\n  useEffect(() => {\r\n    toggle();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type={playing ? \"text\" : \"default\"}\r\n        shape='circle'\r\n        icon={playing ? <SoundFilled /> : <SoundOutlined />}\r\n        onClick={toggle}\r\n        size='large'\r\n      />\r\n      <br></br>\r\n      <h2>\r\n        Average velocity on{\" \"}\r\n        {props.date ? props.date.split(\"+\").join(\" \") : \"NaN\"} is{\" \"}\r\n        {props.vel ? props.vel : \"NaN\"}\r\n      </h2>\r\n    </div>\r\n  ); /*\r\n  return (\r\n    <>\r\n      <Button type='primary' icon={<SoundOutlined />} />\r\n      <ReactAudioPlayer\r\n        src='https://spacewapi.herokuapp.com/avgvelocity/?text=11+january+twentytwenty'\r\n        autoPlay={true}\r\n      />\r\n    </>\r\n  );*/\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import { Tabs, Row, Col, Divider, Tooltip, Button, Badge } from \"antd\";\r\nimport { Fragment } from \"react\";\r\nimport Weekday from \"./Weekday\";\r\nimport ChartSettings from \"./ChartSettings\";\r\nimport { RightOutlined, LeftOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  CloseCircleFilled,\r\n  ExclamationCircleFilled,\r\n  CheckCircleFilled,\r\n} from \"@ant-design/icons\";\r\nimport Graph from \"./Graph\";\r\nimport AudioPlayer from \"./AudioPlayer\";\r\nconst operations = <ChartSettings />;\r\nconst DisplayFrame = (props) => {\r\n  //console.log(Object.keys(props.graphdata).length);\r\n  return (\r\n    <Fragment>\r\n      <Divider orientation='left'>Weather Alerts</Divider>\r\n      <Row>\r\n        <Col span={12}>\r\n          <div\r\n            color='moderate'\r\n            style={{\r\n              backgroundColor: \"#f6f6f6\",\r\n              borderRadius: \"50px\",\r\n              padding: \"0.9rem\",\r\n              paddingTop: \"1.1rem\",\r\n              paddingRight: \"0rem\",\r\n              margin: \"0.9rem\",\r\n            }}\r\n          >\r\n            <Row>\r\n              {\" \"}\r\n              <Col span={8}>\r\n                {props.graphs.val && (\r\n                  <Fragment>\r\n                    {parseFloat(props.graphs.val.split(\"k\")) > 600 ? (\r\n                      <Badge\r\n                        style={{ backgroundColor: \"#880808\" }}\r\n                        count={\"severe\"}\r\n                      >\r\n                        <CloseCircleFilled\r\n                          style={{ color: \"#DC143C\", fontSize: \"3rem\" }}\r\n                        />\r\n                      </Badge>\r\n                    ) : parseFloat(props.graphs.val.split(\"k\")) > 400 ? (\r\n                      <Badge\r\n                        style={{ backgroundColor: \"#FFBF00\" }}\r\n                        count={\"alert\"}\r\n                      >\r\n                        <ExclamationCircleFilled\r\n                          style={{ color: \"#E49B0F\", fontSize: \"3rem\" }}\r\n                        />\r\n                      </Badge>\r\n                    ) : (\r\n                      <Badge\r\n                        style={{ backgroundColor: \"#4CBB17\" }}\r\n                        count={\"safe\"}\r\n                      >\r\n                        <CheckCircleFilled\r\n                          style={{ color: \"#097969\", fontSize: \"3rem\" }}\r\n                        />\r\n                      </Badge>\r\n                    )}\r\n                  </Fragment>\r\n                )}\r\n\r\n                <p></p>\r\n              </Col>\r\n              <Col span={10} style={{ textAlign: \"left\" }}>\r\n                Temperature:{\" \"}\r\n                <b>{Math.round(props.graphs.avg_temp / 1e4) / 100} MK </b>\r\n                <br></br> Density:{\" \"}\r\n                <b>{Math.round(props.graphs.avg_den * 100) / 100} n/cc</b>\r\n                <br></br> Speed: <b>{props.graphs.val}</b>\r\n              </Col>{\" \"}\r\n            </Row>{\" \"}\r\n          </div>\r\n        </Col>\r\n        <Col span={12}>\r\n          {props.show && (\r\n            <AudioPlayer\r\n              date={props.graphs.date}\r\n              vel={props.graphs.val}\r\n              url={props.graphs.url}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      {Object.keys(props.graphdata).length !== 0 && (\r\n        <Tabs tabBarExtraContent={operations} defaultActiveKey='1'>\r\n          <Tabs.TabPane tab='Temperature' key='1'>\r\n            <Graph\r\n              type='bar'\r\n              data={props.graphdata.temp}\r\n              title='Temperature (MK)'\r\n              label='temp'\r\n            />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab='Velocity' key='2'>\r\n            <Graph\r\n              type='line'\r\n              data={props.graphdata.velocity}\r\n              data2={props.graphdata.calcvel}\r\n              title='Wind Speed (km/s)'\r\n              label='vel'\r\n            />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab='Density' key='3'>\r\n            <Graph\r\n              type='line'\r\n              data={props.graphdata.density}\r\n              title='Density (n/cc)'\r\n              label='dens'\r\n            />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab='Dst Index' key='4'>\r\n            <Graph\r\n              type='line'\r\n              data={props.graphdata.dst}\r\n              data2={[\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0,\r\n              ]}\r\n              title='Density (nT)'\r\n              label='dst'\r\n            />\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      )}\r\n\r\n      <Divider orientation='left'>This Week</Divider>\r\n      <Row justify='center' gutter={8} align='middle'>\r\n        <Col span={1}>\r\n          <Tooltip title='Previous Week'>\r\n            <Button type='text' shape='circle' icon={<LeftOutlined />} />\r\n          </Tooltip>\r\n        </Col>\r\n        {props.weekly &&\r\n          props.weekly.map((item, ind) => (\r\n            <Weekday\r\n              data={item}\r\n              ind={ind === props.curr}\r\n              key={ind}\r\n              num={ind}\r\n              setCurr={props.setCurr}\r\n            />\r\n          ))}\r\n        <Col span={1}>\r\n          <Tooltip title='Next Week'>\r\n            <Button type='text' shape='circle' icon={<RightOutlined />} />\r\n          </Tooltip>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDisplayFrame.defaultProps = {\r\n  graphdata: {\r\n    temp: [\r\n      256031, 254548, 301362, 213076, 202391, 188560, 182158, 140751, 138451,\r\n      125780, 123067, 120155, 105004, 9999999, 63296, 66112, 104670, 139632,\r\n      135436, 124822, 99517, 89187, 76672, 76558, 65430, 70923, 62905, 112596,\r\n      450530, 263192, 426853, 434324, 154341, 173847, 172816, 56683, 121476,\r\n      134847, 243691, 265442, 315931, 305047, 283811, 270334, 383326, 372681,\r\n      407739, 393890,\r\n    ],\r\n  },\r\n  graphs: {\r\n    val: \"509.33km/s\",\r\n  },\r\n};\r\nexport default DisplayFrame;\r\n","import {\r\n  InputNumber,\r\n  DatePicker,\r\n  Divider,\r\n  Radio,\r\n  Row,\r\n  Col,\r\n  Switch,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nconst options = [\r\n  { label: \"Flow Speed\", value: \"velocity\" },\r\n  { label: \"Proton Temperature\", value: \"temp\" },\r\n  { label: \"Proton Density\", value: \"density\" },\r\n  /*{ label: \"Magnetic Field\", value: \"mag\" },\r\n  { label: \"Flow Pressure\", value: \"pres\" },*/\r\n];\r\n\r\nconst ManualInput = (props) => {\r\n  let month = [\r\n    \"january\",\r\n    \"february\",\r\n    \"march\",\r\n    \"april\",\r\n    \"may\",\r\n    \"june\",\r\n    \"july\",\r\n    \"august\",\r\n    \"september\",\r\n    \"october\",\r\n    \"november\",\r\n    \"december\",\r\n  ];\r\n  const onChange = () => {\r\n    props.setShowGraphs(!props.showGraphs);\r\n  };\r\n  const [type, setType] = useState(1);\r\n  const onselect = (ele) => {\r\n    setType(ele.target.value);\r\n  };\r\n  const onSet = (ele, elestring) => {\r\n    console.log(elestring || ele);\r\n    if (elestring) {\r\n      elestring =\r\n        elestring.slice(0, 3) +\r\n        month[parseInt(elestring.slice(3, 5)) - 1] +\r\n        elestring.slice(5);\r\n    }\r\n    props.manualInp(elestring || ele);\r\n  };\r\n  return (\r\n    <>\r\n      <Radio.Group name='radiogroup' defaultValue={type}>\r\n        <Radio value={1} onChange={onselect}>\r\n          Date\r\n        </Radio>\r\n        {/* <Radio value={2} onChange={onselect}>\r\n          CR Number\r\n        </Radio> */}\r\n      </Radio.Group>\r\n      {type === 1 ? (\r\n        <DatePicker onChange={onSet} format={\"DD/MM/YYYY\"} />\r\n      ) : (\r\n        <InputNumber min={1905} max={2255} onChange={onSet} />\r\n      )}\r\n      <Divider orientation='center'>Select Plasma Properties</Divider>\r\n      <Switch\r\n        defaultChecked\r\n        onChange={onChange}\r\n        value={props.setShowGraphs}\r\n      />{\" \"}\r\n      Show Graphs{\" \"}\r\n      <Switch defaultChecked onChange={onChange} value={props.setShowGraphs} />{\" \"}\r\n      Show Weekly data<br></br>\r\n      <Checkbox.Group\r\n        options={options}\r\n        defaultValue={[\"velocity\", \"temp\", \"density\"]}\r\n        onChange={onChange}\r\n      />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManualInput;\r\n","import wordsToNumbers from \"words-to-numbers\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Space, Collapse } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport DisplayFrame from \"./ui/DisplayFrame\";\r\nimport ManualInput from \"./ui/ManualInput\";\r\nimport ChartSettings from \"./ui/ChartSettings\";\r\nconst { Panel } = Collapse;\r\n\r\nfunction App(props) {\r\n  const [graphs, setGraphs] = useState({});\r\n  const [weekly, setWeek] = useState([]);\r\n  const [graphdata, setGraphdata] = useState({});\r\n  const [weeklygraphdata, setWeeklyGraphdata] = useState({});\r\n  const [quer, setQuer] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [showGraphs, setShowGraphs] = useState(true);\r\n  const [curr, setCurrent] = useState(0);\r\n  useEffect(() => {\r\n    let final = \"\";\r\n    props.utterances.forEach((ele) => {\r\n      final =\r\n        final +\r\n        \"+\" +\r\n        wordsToNumbers(ele.text, { impliedHundreds: true })\r\n          .toString()\r\n          .split(\" \")\r\n          .join(\"\");\r\n    });\r\n    console.log(final);\r\n    setQuer(final);\r\n  }, [props, props.utterances]);\r\n\r\n  // useEffect(() => {\r\n  //   //setCurr(0);\r\n  //   console.log(curr);\r\n  //   setGraphdata(weeklygraphdata[curr]);\r\n  // }, [curr]);\r\n\r\n  const fetchData = async () => {};\r\n\r\n  const myurl = \"swasti-framework.azurewebsites.net\"; //\"127.0.0.1:5000\"; //\r\n\r\n  const fetchVelData = async () => {\r\n    let tempurl = `${myurl}/avgvelocity/?text=${quer}`;\r\n    const res = await fetch(\"https://\" + tempurl);\r\n    const data = await res.json();\r\n    setGraphs(data);\r\n    // if (quer.toLowerCase.includes(\"basic\")) {\r\n    //   setShowGraphs(true);\r\n    // }\r\n    setShow(true);\r\n\r\n    const res2 = await fetch(`https://${myurl}/get_obs?param=${quer}`);\r\n    const data2 = await res2.json();\r\n    console.log(data2);\r\n    setGraphdata(data2);\r\n\r\n    const res3 = await fetch(`https://${myurl}/weekly_outline?param=${quer}`);\r\n    const data3 = await res3.json();\r\n    //console.log(data3);\r\n    setWeek(data3.data);\r\n\r\n    const res4 = await fetch(`https://${myurl}/weekly_detailed?param=${quer}`);\r\n    const data4 = await res4.json();\r\n    console.log(data4.data);\r\n    setWeeklyGraphdata(data4.data);\r\n  };\r\n\r\n  const setCurr = (num) => {\r\n    setCurrent(num ? num : 0);\r\n    //console.log(num);\r\n    setGraphdata({\r\n      density: weeklygraphdata[num][2],\r\n      temp: weeklygraphdata[num][1],\r\n      velocity: weeklygraphdata[num][0],\r\n      dst: weeklygraphdata[num][3],\r\n    });\r\n  };\r\n\r\n  const manualInp = (query) => {\r\n    query && setQuer(query.split(\"/\").join(\"+\"));\r\n  };\r\n\r\n  // const switched=()=>{\r\n  //  setShowGraphs(!showGraphs);\r\n  //  setGraphs({});\r\n  //  set\r\n  // }\r\n\r\n  return (\r\n    <Space\r\n      direction='vertical'\r\n      size='middle'\r\n      style={{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n      }}\r\n      className='panel'\r\n    >\r\n      <h4>OR</h4>\r\n      <Collapse defaultActiveKey={[\"0\"]}>\r\n        <Panel header='Manual Input' key='1'>\r\n          <ManualInput\r\n            manualInp={manualInp}\r\n            showGraphs={showGraphs}\r\n            setShowGraphs={setShowGraphs}\r\n          />\r\n        </Panel>\r\n      </Collapse>\r\n\r\n      <Space size='small'>\r\n        <Button type='primary' onClick={() => fetchVelData()}>\r\n          Get Graphs\r\n        </Button>\r\n        <Button\r\n          icon={<DeleteOutlined />}\r\n          type='primary'\r\n          danger\r\n          onClick={props.clearVoice}\r\n          color='#1E3388'\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Space>\r\n\r\n      <DisplayFrame\r\n        graphs={graphs}\r\n        show={show}\r\n        graphdata={graphdata}\r\n        weekly={weekly}\r\n        setCurr={setCurr}\r\n        curr={curr}\r\n      />\r\n    </Space>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { createModel, KaldiRecognizer, Model } from \"vosk-browser\";\r\nimport Microphone from \"./microphone\";\r\nimport ModelLoader from \"./model-loader\";\r\nimport App from './App'\r\nimport DateWidget from \"./ui/DateWidget\";\r\n\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 1rem auto;\r\n`;\r\n\r\nconst ResultContainer = styled.div`\r\n  width: 100%;\r\n  margin: 1rem auto;\r\n  border: 1px solid #aaaaaa;\r\n  padding: 1rem;\r\n  resize: vertical;\r\n  overflow: auto;\r\n  \r\n`;\r\n\r\nconst Word = styled.span<{ confidence: number }>`\r\n  color: ${({ confidence }) => {\r\n    const color = Math.max(255 * (1 - confidence) - 20, 0);\r\n    return `rgb(${color},${color},${color})`;\r\n  }};\r\n  white-space: normal;\r\n`;\r\n\r\ninterface VoskResult {\r\n  result: Array<{\r\n    conf: number;\r\n    start: number;\r\n    end: number;\r\n    word: string;\r\n  }>;\r\n  text: string;\r\n}\r\n\r\nexport const Recognizer: React.FunctionComponent = () => {\r\n  const [utterances, setUtterances] = useState<VoskResult[]>([]);\r\n  const [partial, setPartial] = useState(\"\");\r\n\r\n  const [loadedModel, setLoadedModel] = useState<{\r\n    model: Model;\r\n    path: string;\r\n  }>();\r\n  const [recognizer, setRecognizer] = useState<KaldiRecognizer>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const loadModel = async (path: string) => {\r\n    setLoading(true);\r\n    loadedModel?.model.terminate();\r\n\r\n    const model = await createModel(process.env.PUBLIC_URL + \"/models/\" + path);\r\n\r\n    setLoadedModel({ model, path });\r\n    const recognizer = new model.KaldiRecognizer(48000);\r\n    recognizer.setWords(true);\r\n    recognizer.on(\"result\", (message: any) => {\r\n      const result: VoskResult = message.result;\r\n      setUtterances((utt: VoskResult[]) => [...utt, result]);\r\n    });\r\n\r\n    recognizer.on(\"partialresult\", (message: any) => {\r\n      setPartial(message.result.partial);\r\n    });\r\n\r\n    setRecognizer(() => {\r\n      setLoading(false);\r\n      setReady(true);\r\n      return recognizer;\r\n    });\r\n  };\r\n\r\n  const clearVoice= () =>{\r\n    setUtterances((utt: VoskResult[]) => []);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModelLoader\r\n        onModelChange={(path) => setReady(loadedModel?.path === path)}\r\n        onModelSelect={(path) => {\r\n          if (loadedModel?.path !== path) {\r\n            loadModel(path);\r\n          }\r\n        }}\r\n        loading={loading}\r\n      />\r\n      \r\n      <Header>\r\n        <Microphone recognizer={recognizer} loading={loading} ready={ready} />\r\n      </Header>\r\n      <ResultContainer>\r\n        {utterances.map((utt, uindex) =>\r\n          utt?.result?.map((word, windex) => (\r\n            <Word\r\n              key={`${uindex}-${windex}`}\r\n              confidence={word.conf}\r\n              title={`Confidence: ${(word.conf * 100).toFixed(2)}%`}\r\n            >\r\n              {word.word}{\" \"}\r\n            </Word>\r\n          ))\r\n        )}\r\n        <span key=\"partial\">{partial}</span>\r\n      </ResultContainer>\r\n      \r\n      <App utterances={utterances} clearVoice={clearVoice}/>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Breadcrumb, Layout, Menu, Button, PageHeader } from \"antd\";\r\nimport { Recognizer } from \"../recognizer\";\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst LayoutFrame = (props) => {\r\n  const dayNames = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursdsay\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const month = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  var today = new Date(),\r\n    date =\r\n      month[today.getMonth()] +\r\n      \"  \" +\r\n      today.getDay() +\r\n      \", \" +\r\n      today.getFullYear();\r\n  return (\r\n    <Layout className='layout'>\r\n      <PageHeader\r\n        ghost={false}\r\n        className='site-page-header'\r\n        title={\r\n          <span>\r\n            <span\r\n              style={{\r\n                fontSize: \"25px\",\r\n                color: \"white\",\r\n                paddingBottom: \"0\",\r\n                marginBottom: \"0\",\r\n              }}\r\n            >\r\n              SWASTi Framework{\" \"}\r\n            </span>\r\n\r\n            <span style={{ color: \"#d9d9d9\", fontSize: \"15px\" }}>\r\n              for space weather prediction\r\n            </span>\r\n          </span>\r\n        }\r\n        extra={[\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n              color: \"white\",\r\n              padding: \"0px\",\r\n              margin: \"0px\",\r\n            }}\r\n          >\r\n            <span style={{ fontSize: \"20px\" }}>{dayNames[today.getDay()]}</span>\r\n            <h5 style={{ color: \"white\" }}>{date}</h5>\r\n          </div>,\r\n        ]}\r\n      />\r\n      {/* <Header>\r\n        <div>\r\n          <h1 style={{ color: \"white\" }}>SWASTi Framework</h1>\r\n        </div>\r\n      </Header> */}\r\n      <Layout>\r\n        <Content\r\n          style={{\r\n            padding: \"0 50px\",\r\n          }}\r\n        >\r\n          {/* <div className='site-layout-content'>\r\n      <DateWidget />\r\n    </div> */}\r\n          <br />\r\n          <div className='site-layout-content'>\r\n            <Recognizer />\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n      <Footer\r\n        style={{\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Footnote ©2022 Footnote\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutFrame;\r\n","import \"antd/dist/antd.min.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport { Recognizer } from \"./recognizer\";\r\nimport LayoutFrame from \"./ui/LayoutFrame\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <>\r\n  \r\n      <LayoutFrame />\r\n      \r\n    \r\n      \r\n      \r\n\r\n    \r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}